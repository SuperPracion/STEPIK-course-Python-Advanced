bool() - приведения других типов данных к Булевому значению:
    1. Если строка пустая - False, иначе True
    2. Если число ноль - False, иначе True
    3. Если список пуст - False, иначе True
type(<variable>) - функция возвращает тип данных значения
isinstance(<variable>, <type>) - функция определяющая принадлежность переменной <variable> к заданному типу данных <type>
ljust(<len>, <symbol>) - выравнивает текст по ширине относительно len, добавляя пробелы или <symbol> в конец строки
rjust(<len>, <symbol>) - выравнивает текст по ширине относительно len, добавляя пробелы или <symbol> в начало строки
tuple() - кортежи, не изменяемые последовательности. Задуманы как неизменяемый аналог список
sorted() - функция сортирующая последовательности и возвращает список. Список можно преобразовать в tuple() или другой тип
    имеет флаг reverse.
set() - тип данных в python использующийся для создания множеств
add() - используется для добавления элемента во множество
remove() - удаляет элемент из множества с генерацией исключения в случае отсутствия элемента KeyError
discard() - удаляет элемент из массива без генерации исключения
pop() - удаляет и возвращает случайный элемент из списка, генерирует исключение в случае отсутствия элемента
clear() - также используется для очищения множества
union() - возвращает объединённое новое множество, или оператор |
intersection() - возвращает множество с пересечением, или оператор &
difference() - возвращает множество с разностью, или оператор -
symmetric_difference() - возвращает множество с симметричной разностью ^
update() - не возвращает множество, объединяет уже существующее |, |=
intersection_update() - не возвращает множества, но выполняет пересечение &, &=
difference_update() - не возвращает множества, но выполняет вычитание -, -=
symmetric_difference_update() - не возвращает новое множество, но выполняет симметричную разность ^, ^=
