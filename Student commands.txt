bool() - приведения других типов данных к Булевому значению:
    1. Если строка пустая - False, иначе True
    2. Если число ноль - False, иначе True
    3. Если список пуст - False, иначе True
type(<variable>) - функция возвращает тип данных значения
isinstance(<variable>, <type>) - функция определяющая принадлежность переменной <variable> к заданному типу данных <type>
ljust(<len>, <symbol>) - выравнивает текст по ширине относительно len, добавляя пробелы или <symbol> в конец строки
rjust(<len>, <symbol>) - выравнивает текст по ширине относительно len, добавляя пробелы или <symbol> в начало строки
tuple() - кортежи, не изменяемые последовательности. Задуманы как неизменяемый аналог список
sorted() - функция сортирующая последовательности и возвращает список. Список можно преобразовать в tuple() или другой тип
    имеет флаг reverse.
set() - тип данных в python использующийся для создания множеств
add() - используется для добавления элемента во множество
remove() - удаляет элемент из множества с генерацией исключения в случае отсутствия элемента KeyError
discard() - удаляет элемент из массива без генерации исключения
pop() - удаляет и возвращает случайный элемент из списка, генерирует исключение в случае отсутствия элемента
clear() - также используется для очищения множества
union() - возвращает объединённое новое множество, или оператор |
intersection() - возвращает множество с пересечением, или оператор &
difference() - возвращает множество с разностью, или оператор -
symmetric_difference() - возвращает множество с симметричной разностью ^
update() - не возвращает множество, объединяет уже существующее |, |=
intersection_update() - не возвращает множества, но выполняет пересечение &, &=
difference_update() - не возвращает множества, но выполняет вычитание -, -=
symmetric_difference_update() - не возвращает новое множество, но выполняет симметричную разность ^, ^=
issuperset() - метод проверяет является ли множество A надмножеством B, True иначе False. >= (не строгое надмножество), > (строгое надмножество)
issubset() - метод проверяет является ли множество A подмножеством B, True или False. <= (не строгое подмножеств), < (строгое подмножество)
isdisjoint() - метод проверяет отсутствие общих элементов в множествах. True (если нет совпадений) или False.
frozenset() - специальный тип множества, который после создания не может быть изменён. Результат операции над замороженным множеством - будет замороженное множество
dict() - тип данных словарь. В словаре доступна для каждого для элемента индексация по ключ - значение. {<key>: <value>}
fromkeys() - метод выдающий каждому ключу словаря одно и тоже значение. fromkeys(<values>, <universal param>)
keys() - метод возвращает список всех ключей словаря
values() - метод возвращает список всех значений словаря
items() - возвращает кортеж из (<ключ>, <значение>)
get(<key>, <out message, default type None>) - метод обращающийся к словарю и возвращающий результат. В случае отсутствия ключа в словаре не выдаёт ошибку.
update() - метод объединяет различные словари в один
popitem() - удаляет из словаря последний добавленный элемент и возвращает его в виде ключ-значение
setdefault(<key>, <default>) - метод позволяет получить значение словаря по ключу, автоматически добавляя ключ в случает отсутствия
randint(<start>, <finish>) - функция возвращает случайное число из диапазона [start, finish]
randrange(<start>, <finish>, <step>) - функция возвращает числ из диапазона [start, finish), может иметь параметр шага случайного числа step
uniform(<start>, <finish>) - возвращает случайное вещественное число из выбранного диапазона [start, finish]
seed() - функция задаёт ключ генерации случайных чисел
shuffle() - метод принимает в качестве аргумента любой список и перемешивает его элементы случайным образом
choice() - метод принимает список или кортеж и возвращает один случайным  элемент
sample(<list>, <length>) - принимает список, кортеж, строку и возвращает случайный набор элементов заранее заданной длинны
string - метод позволяющий вернуть большое количество разнотипных строк имея аргумент:
    ascii_letters - весь английский алфавит в верхнем и нижнем регистрах
    ascii_uppercase - англ. алфавит в верхнем регистре
    ascii_lowercase - англ. алфавит в нижнем регистре
    digits - все цифры десятичной системы
    hexdigits - все числа шестнадцатерично системы
    octdigits - все числа восьмеричной системы
    punctuation - все знаки препинания и спец символы
    printable - все символы и спец символы и символы работы со строкой
Decimal - десятичное число для выполнения точных расчётов, отличается от float - точностью
    .prec - параметр отвечающий за точность выполнения операции
    quantize() - округление числа до определенной точности
Fraction - дробное, вещественное число, с заданным количеством знаков после запятой
Complex - комплексное число
Fraction - тип данных представляющая из себя обыкновенную дробь (1/2, 3/4, 6/9)
numerato - свойство возвращает числитель дроби Fraction
denominator - свойство возвращает знаменатель дроби Fraction
as_integer_ration() - метод возвращающий числитель и знаменатель дроби Fraction в виде кортежа
limit_denominator() - метод возвращает рациональную дробь, чей знаменатель не превосходит переданного аргумента
